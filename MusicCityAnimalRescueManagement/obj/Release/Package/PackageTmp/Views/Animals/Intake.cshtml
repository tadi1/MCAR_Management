@model MusicCityAnimalRescueManagement.ViewModels.NewAnimalViewModel

@{
	ViewBag.Title = "Intake";
	Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Intake</h2>


@using (Html.BeginForm())
{
	@Html.AntiForgeryToken()

	<div class="form-horizontal">
		<h4>Animal</h4>
		<hr />
		@Html.ValidationSummary(true, "", new { @class = "text-danger" })
		<div class="form-group">
			@Html.LabelFor(model => model.Animal.name, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.Animal.name, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Animal.name, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.AnimalTypes, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.DropDownListFor(model => model.AnimalTypes, new SelectList(Model.AnimalTypes, "id", "Type"), "Select Type", new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.AnimalTypes, "", new { @class = "text-danger" })
			</div>
		</div>

		@*<div class="form-group">
			@Html.LabelFor(model => model.Animal.AnimalTypeID, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.DropDownListFor(model => model.Animal.AnimalTypeID, new SelectList(Model.AnimalTypes, "id", "Type"), "Select Type", new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Animal.AnimalTypeID, "", new { @class = "text-danger" })
			</div>
		</div>*@

		<div class="form-group">
			@Html.LabelFor(model => model.Animal.colors, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.Animal.colors, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Animal.colors, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.Animal.breed, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.Animal.breed, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Animal.breed, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.Animal.description, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.Animal.description, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Animal.description, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.Animal.housetraining, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				<div class="checkbox">
					@Html.EditorFor(model => model.Animal.housetraining)
					@Html.ValidationMessageFor(model => model.Animal.housetraining, "", new { @class = "text-danger" })
				</div>
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.Locations, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.DropDownListFor(model => model.Locations, new SelectList(Model.Locations, "id", "name"), "Select Foster", new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Locations, "", new { @class = "text-danger" })
			</div>
		</div>

		@*<div class="form-group">
			@Html.LabelFor(model => model.Animal.LocationID, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.DropDownListFor(model => model.Animal.LocationID, new SelectList(Model.Locations, "id", "name"), "Select Foster", new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Animal.LocationID, "", new { @class = "text-danger" })
			</div>
		</div>*@

		<div class="form-group">
			@Html.LabelFor(model => model.Animal.adopted, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				<div class="checkbox">
					@Html.EditorFor(model => model.Animal.adopted)
					@Html.ValidationMessageFor(model => model.Animal.adopted, "", new { @class = "text-danger" })
				</div>
			</div>
		</div>

		<div class="form-group">
			<div class="col-md-offset-2 col-md-10">
				<input type="submit" value="Intake" class="btn btn-default" />
			</div>
		</div>
	</div>
}

<div>
	@Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
	@Scripts.Render("~/bundles/jqueryval")
	<script>
	// With JQuery
	//$('#ex1').slider({
	//    formatter: function(value) {
	//	    return 'Current value: ' + value;
	//    }
	//});

	// Without JQuery
	var slider = new Slider('#ex1', {
		formatter: function(value) {
			return 'Current value: ' + value;
		}
	});

	</script>
}
